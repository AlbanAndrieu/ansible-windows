---
# This playbook contains common plays that will be run on all nodes.

- name: Ping
  win_ping:

- name: run ipconfig
  raw: ipconfig
  register: ipconfig
- debug: var=ipconfig

- name: test stat module on file
  win_stat: path="C:/Windows/win.ini"
  register: stat_file

- debug: var=stat_file

- name: check stat_file result
  assert:
      that:
         - "stat_file.stat.exists"
         - "not stat_file.stat.isdir"
         - "stat_file.stat.size > 0"

- name: Add User
  win_user:
    name: jenkins
    password: "Jenkins123$"
    state: present

- name: Save the result of 'whoami' in 'whoami_out'
  win_command: whoami
  register: whoami_out

- debug: var=whoami_out.stdout_lines

- name: Save the result of 'whoami' in 'whoami_out'
  win_shell: echo $PSVersionTable
  register: ps_out

- debug: var=ps_out.stdout_lines

- name: echo 'temp' in 'temp_out'
  win_shell: echo $TEMP
  register: temp_out

- debug: var=temp_out.stdout_lines

- name: Create temp directory
  win_file:
    path: C:\Windows\Temp
    state: directory

- name: Copy helloworld.ps1 to TMP
  win_copy:
    src: files/helloworld.ps1
    dest: C:\Windows\Temp\helloworld.ps1
    force: True
    remote_src: False
    register: out

- debug: var=out.stdout_lines

- debug:
    msg: set-executionpolicy remotesigned

- name: "Check executionpolicy"
  win_shell: Get-ExecutionPolicy

- name: "Change ExecutionPolicy"
  win_command: Set-ExecutionPolicy AllSigned
  ignore_errors: true

#- name: Run powershell script
#  script: C:\Windows\Temp\helloworld.ps1
#  register: out

- name: Run powershell script
  script: files/helloworld.ps1
  register: out

- debug: var=out.stdout_lines

- name: "Try command choco"
  win_command: choco -v
  register: result
  ignore_errors: true

#- name: "install chocolatey"
#  import_tasks: chocolatey.yml
#  when: result|failed

- name: "Upgrade chocolatey"
  win_command: choco upgrade chocolatey -y

- name: "Installl chocolateygui"
  win_command: choco install chocolateygui -y
#  ignore_errors: true

#- name: update installed chocolatey packages
#  win_chocolatey:
#    name: all
#    state: latest

#choco install chocolatey-core.extension -y
#- name: Install activeperl
#  win_chocolatey:
#    name: chocolatey-core.extension
#    state: present

#- import_tasks: windows-diskE.yml

- import_tasks: common.yml

- import_tasks: git.yml

#- import_tasks: svn.yml

- import_tasks: editor.yml

- import_tasks: tools.yml

- import_tasks: build.yml

- import_tasks: pacman.yml

- import_tasks: perl.yml

- import_tasks: cpp.yml

#- import_tasks: objc.yml

- import_tasks: java.yml

- import_tasks: python.yml

#- import_tasks: scons.yml

- import_tasks: javascript.yml

#- import_tasks: quality.yml

#- import_tasks: admin.yml

#- import_tasks: browser.yml

#- import_tasks: database.yml

- import_tasks: openssl.yml

- import_tasks: user.yml

#- import_tasks: debug.yml

- import_tasks: docker.yml

- import_tasks: kubernetes.yml

- import_tasks: security.yml

- import_tasks: azure.yml

## Install/uninstall an msi-based package
#- name: Install msi-based package (Remote Desktop Connection Manager)
#  win_package:
#    path: "https://download.microsoft.com/download/A/F/0/AF0071F3-B198-4A35-AA90-C68D103BDCCF/rdcman.msi"
#    product_id: "{0240359E-6A4C-4884-9E94-B397A02D893C}"

#See https://docs.ansible.com/ansible/list_of_windows_modules.html

#- name: Install common prerequisite like (GIT, meld, notepadplusplus and zabbix-agent)
#  script: common-setup.ps1

# Only for Windows Server 2012 (not neededed for Windows Server 2016), you need to change DEP.
#
# Go in « Control panel / System »,
# Then « Advanced system settings »,
# Then in tab « Advanced / Performances », click on « Settings »,
# Then in tab  « Data Execution Prevention », tick the first option, « Turn on DEP for essential Windows programs and services only »,
# Reboot

#- name: "reboot"
#  win_reboot:
