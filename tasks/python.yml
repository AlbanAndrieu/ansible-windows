---

#choco install python2 --package-parameters '"/InstallDir:C:\Python27"'

- name: Install python2
  win_chocolatey:
    name: python2
    version: '2.7.18'
#    install_args: "--install-directory C:\Python27"
    package_params: '"/InstallDir:C:\Python27"'
    state: present

#choco install python3 --package-parameters '"/InstallDir:C:\Python37"'

- name: Install python3.7
  win_chocolatey:
    name: python3
    version: '3.7.4'
    package_params: '"/InstallDir:C:\Python37"'
    state: present

- name: Install python3.8
  win_chocolatey:
    name: python3
    version: '3.8.0'
    package_params: '"/InstallDir:C:\Python38"'
    state: present

- name: Install python3.9
  win_chocolatey:
    name: python3
    version: '3.9.0'
    package_params: '"/InstallDir:C:\Python39"'
    state: present

#- name: Install pip
#  win_chocolatey:
#    name: pip
#    version: '1.2.0'
#    state: present

- name: Install pywin32
  win_chocolatey:
    name: pywin32
    version: '219.0'
    state: present

#- name: "download {{ python.pip.script }} script"
#  win_get_url:
#    url: "{{ python.pip.url_prefix }}/{{ python.pip.script }}"
#    dest: "{{ ansible_user_dir }}\\{{ python.pip.script }}"
#    force: no

#- name: "install pip"
#  win_shell: "python {{ ansible_user_dir }}\\{{ python.pip.script }}"
#
#- name: "clean {{ python.pip.script }} script"
#  win_file:
#    path: "{{ ansible_user_dir }}\\{{ python.pip.script }}"
#    state: absent
#  tags:
#    - cleanup

- name: Ensure that Python27 are present on the global system path, and in the specified order
  win_path:
    elements:
    - 'C:\Python27'
    - 'C:\Python27\Scripts'
