---
# This role required msys2 tool
- import_tasks: mingw.yml
#- import_tasks: cygwin.yml # Before we were using cygwin, now mingw is the default shell tool for windows

- name: Ensure that Msys64 are present on the global system path, and in the specified order
  win_path:
    elements:
      - 'C:\tools\msys64'
      - 'C:\tools\msys64\usr\bin'
  tags:
    - path
    - mingw64
    - msys2
    - env
    - build
    #- vm # do not install on docker image

# See inside C:\tools

# pacman -Sy
# pacman -Su

# See https://wiki.archlinux.org/index.php/mirrors

# nano /etc/pacman.conf
# Enable the extra repository on /etc/pacman.conf:
# [extra]
# Server = http://mirrors.kernel.org/archlinux/$repo/os/$arch
#
# [core]
# Server = ftp://ftp.hosteurope.de/mirror/ftp.archlinux.org/core/os/$arch

- name: Create a Unix-style pacman.conf
  win_template:
    src: pacman.conf.j2
    dest: C:\tools\msys64\etc\pacman.conf
    newline_sequence: '\n'
    backup: yes

  tags:
    - package
    - pacman
    - env
    - build
    #- vm # do not install on docker image

#- name: Upgrade pacman extra repo for lsof
#  win_lineinfile:
#    path: C:\tools\msys64\etc\pacman.conf
#    regexp: '^[extra]'
#    line: "{{ item }}"
#  with_items: "{{ pacman_extra_repo }}"
#  when: pacman_extra_repo | length > 0
##  become: true
##  become_method: sudo
#  tags:
#    - package
#    - pacman
#    - env
#    - build
#    #- vm # do not install on docker image

# rm -f /var/lib/pacman/db.lck
- name: "Delete /var/lib/pacman/db.lck"
  win_file:
    path: C:\tools\msys64\var\lib\pacman\db.lck
    state: absent

  tags:
    - package
    - pacman
    - env
    - build
    #- vm # do not install on docker image

# pacman -Syu --debug

# Refresh package list
# pacman -Syyu

# Run the equivalent of "pacman -Syu" as a separate step
- name: Upgrade pacman
  pacman:
    update_cache: yes
    upgrade: yes
  when: (ansible_os_family != 'Windows' )
  tags:
    - package
    - pacman
    - build
    #- vm # do not install on docker image

- name: Make sure msys2 pacman gcc 64 bits packages are properly installed
  pacman:
    name:
      - mingw-w64-x86_64-toolchain
      - mingw-w64-x86_64-gcc
      - mingw-w64-x86_64-gcc-objc
      - mingw-w64-x86_64-gdb
    state: present
  ignore_errors: true
  tags:
    - package
    - pacman
    - toolchain
    - build

# pacman -S mingw-w64-x86_64-gperf
# #pacman -S mingw32-runtime

# pacman -Ss | grep msys/mingw

- name: Make sure msys2 pacman gcc 32 bits packages are properly installed
  pacman:
    name:
      - mingw-w64-i686-toolchain
    state: present
  ignore_errors: true
  tags:
    - package
    - pacman
    - i686
    - toolchain
    - build

# wget https://repo.msys2.org/mingw/i686/mingw-w64-i686-gcc-libs-5.1.0-1-any.pkg.tar.xz
# wget https://repo.msys2.org/mingw/i686/mingw-w64-i686-gcc-5.1.0-1-any.pkg.tar.xz
# pacman -U mingw-w64-i686-gcc-5.1.0-1-any.pkg.tar.xz

- name: Make sure msys2 pacman ssl is properly installed for ansible
  pacman:
    name:
      - libcrypt-devel
      - libffi-devel
      - openssl-devel
    state: present
  ignore_errors: true
  tags:
    - package
    - pacman
    - ssl
    - build

- name: Install msys2 required build packages
  pacman:
    name:
      - autoconf
      - automake
      - make
      - cmake
      # - scons   # DO NOT install use pip instead, see scons.yml instead
      - pkg-config
      - libtool
      - doxygen
    state: present
  ignore_errors: true
  tags:
    - package
    - pacman
    - make
    - cmake
    - build

- name: Install msys2 required editor packages
  win_shell: pacman -Syu nano
  ignore_errors: true
  tags:
    - package
    - pacman
    - nano
    - editor
    - debug

- name: Install msys2 required lsof packages
  win_shell: pacman -Sy glibc lsof # lsof from extra repo meed glic from core repo
  ignore_errors: true
  tags:
    - package
    - pacman
    - lsof
    - debug
    - build

- name: Install msys2 required rsync packages
  win_shell: pacman -Sy rsync openssh
  ignore_errors: true
  tags:
    - package
    - pacman
    - rsync
    - copy
    - build

# FYI : I had to refresh package list to make ssh working
# pacman -Syyu

- name: Install msys2 required compression packages
  pacman:
    name:
      - zip
      - unzip
      - tar
    state: present
  ignore_errors: true
  tags:
    - package
    - pacman
    - zip
    - tar
    - build

# Installing GCC & MSYS2
# See https://github.com/orlp/dev-on-windows/wiki/Installing-GCC--&-MSYS2
# or https://github.com/mangband/mangband/wiki/MSYS2

- name: Install msys2 required git
  win_shell: pacman -Sy git mingw-w64-x86_64-git-lfs
  ignore_errors: true
  tags:
    - package
    - pacman
    - git-lfs
    - build

- name: Initialize git-lfs
  win_shell: /mingw64/bin/git-lfs install
  ignore_errors: true
  tags:
    - package
    - pacman
    - git-lfs
    - build

- name: Install msys2 required fonts packages
  win_shell: pacman -Sy mingw-w64-x86_64-freetype mingw-w64-x86_64-SDL mingw-w64-x86_64-SDL_ttf
  ignore_errors: true
  tags:
    - package
    - pacman
    - fonts
    - build

- name: Install msys2 optional packages
  win_shell: pacman -Sy zsh sh curl dos2unix
  ignore_errors: true
  tags:
    - package
    - pacman
    - utility
    - build

- name: Install msys2 required python 3
  pacman:
    name:
      - python
      - python-pip
    state: present
  ignore_errors: true
  tags:
    - package
    - pacman
    - python
    - python3
    - build

#TODO python 3 install
#pacman -S mingw32/mingw-w64-i686-python3-numpy
#pacman -S mingw32/mingw-w64-i686-python3-pip
#pacman -S mingw32/mingw-w64-i686-python3-setuptools
#pacman -S msys/python3-pip
#curl https://bootstrap.pypa.io/ez_setup.py | python
#easy_install pip
#pip install grip
#pip install "pywinrm>=0.3.0"
#http://www.gnustep.org/windows/installer.html#state

- name: Install msys2 optional build packages
  win_shell: pacman -Sy libxml2
  ignore_errors: true
  tags:
    - package
    - pacman
    - libxml
    - build

#pacman -Ss boost

- name: Install msys2 optional build packages
  win_shell: pacman -Sy mingw64/mingw-w64-x86_64-boost
  ignore_errors: true
  tags:
    - package
    - pacman
    - boost
    - build

# See https://packages.msys2.org/base
#mingw-w64-apr
#mingw-w64-apr-util

- name: Install msys2 cppunit packages
  win_shell: pacman -Sy mingw64/mingw-w64-x86_64-cppunit
  ignore_errors: true
  tags:
    - package
    - pacman
    - cppunit
    - test
    - build

- name: Install msys2 cpptest packages
  win_shell: pacman -Sy mingw-w64-x86_64-cpptest
  ignore_errors: true
  tags:
    - package
    - pacman
    - cpptest
    - test
    - build

# will be inside C:\tools\msys64\usr\bin
- name: Install msys2 lex yacc build packages
  win_shell: pacman -Sy bison flex
  ignore_errors: true
  tags:
    - package
    - pacman
    - lex
    - yacc
    - build

# pacman -S mingw-w64-x86_64-gnuplot
# pacman -S mingw-w64-x86_64-gettext
# pacman -S mingw-w64-x86_64-libiconv
# pacman -S mingw-w64-x86_64-icu
# pacman -S mingw-w64-x86_64-libxml2
# pacman -S mingw64/mingw-w64-x86_64-gnome-latex
# pacman -S mingw-w64-x86_64-compiler-rt

# pacman -S mingw-w64-i686-llvm
# pacman -S mingw-w64-x86_64-llvm

- name: Install msys2 uuidgen runtime packages
  win_shell: pacman -Sy util-linux
  ignore_errors: true
  tags:
    - package
    - pacman
    - uuidgen
    - test
    - build

- name: Install msys2 meld3 packages
  win_shell: pacman -Sy mingw-w64-x86_64-meld3 mingw-w64-x86_64-diffutils
  ignore_errors: true
  tags:
    - package
    - pacman
    - diff
    - meld
    - debug
    - build

- name: Initialize PATH for MSYS
  win_shell: echo "export PATH=/mingw32/bin:/mingw64/bin:/opt/mssql-tools/bin:$PATH" >> ~/.bashrc
  ignore_errors: true

- name: Initialize PATH for MINGW64
  win_shell: echo "export PATH=\"/c/tools/msys64/mingw32/bin:/c/tools/msys64/usr/bin:$PATH\"" >> ~/.bashrc
  ignore_errors: true

- name: Initialize PATH
  win_shell: echo "export PATH=/mingw32/bin:/mingw64/bin:$PATH" >> ~/.bashrc
  ignore_errors: true
# See https://devhints.io/pacman
- name: List unneeded packages
  win_shell: pacman -Qdt
  ignore_errors: true

- name: Fix permission
  win_shell: |
    Get-Item -Path "C:\Program Files\Git\usr\bin\*.exe" | %{ Set-ProcessMitigation -Name $_.Name -Disable ForceRelocateImages }
    Get-ChildItem -Path C:\tools\msys64 -Recurse -Include *exe | %{ Set-ProcessMitigation -Name $_.Name -Disable ForceRelocateImages }
